AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create an RDS instance using the Oracle engine

Parameters:
  NetworkStack:
    Type: String

  AppServerSecurityGroupId:
    Type: String

  InstanceType:
    Description: RDS instance type
    Type: String
    Default: db.t2.micro
    AllowedValues: [db.t2.micro, db.t2.small, db.t2.medium, db.t2.large, 
      db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge]
    ConstraintDescription: Please choose a valid instance type.

  DBName:
    Type: String

  DBAllocatedStorage:
    Type: String

  DBUser:
    Type: String

  DBPassword:
    Type: String

Conditions:
  WantsAppServerIngress: !Not [!Equals [!Ref AppServerSecurityGroupId, '']]

Resources:

  MyDB: 
    Type: "AWS::RDS::DBInstance"
    Properties: 
      DBName: 
        Ref: "DBName"
      AllocatedStorage: 
        Ref: "DBAllocatedStorage"
      DBInstanceClass: 
        Ref: "InstanceType"
      Engine: oracle-se2
      EngineVersion: 12.1.0.2.v6
      MasterUsername: 
        Ref: "DBUser"
      MasterUserPassword: 
        Ref: "DBPassword"
      LicenseModel: license-included
      BackupRetentionPeriod: 30
      DBSecurityGroups:
      - Ref: DBSecurityGroup
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      MultiAZ: True
      Port: 1521


  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup 
    Properties:
        DBSubnetGroupDescription: !Sub "DB subnet group for ${AWS::StackName}"
        SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStack}-PrivateSubnet1"
        - Fn::ImportValue: !Sub "${NetworkStack}-PrivateSubnet2"

  DBMaintSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH access to a bastion host to connect to db
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStack}-VPCID"
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      EC2VpcId: 
        Fn::ImportValue: !Sub "${NetworkStack}-VPCID"
      DBSecurityGroupIngress:
        EC2SecurityGroupId:
          Fn::GetAtt: [ "DBMaintSecurityGroup", "GroupId" ] 
      GroupDescription: "Maintenance Access"

  IngressFromAppServer:
      Type: AWS::RDS::DBSecurityGroupIngress
      Condition: WantsAppServerIngress
      Properties:
        EC2SecurityGroupId: 
          AppServerSecurityGroupId
        DBSecurityGroupName:
          Ref: DBSecurityGroup